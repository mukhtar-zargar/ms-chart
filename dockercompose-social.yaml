version: "3.8"
services:
  mongodb:
    image: mongo:5.0.7
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:27017"
    volumes:
      - "db:/data/db"

  redis_cache:
    image: redis:7.0
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - $PWD/redis-data:/data

  zookeeper:
    image: bitnami/zookeeper:3.7.1
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.2.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  user_service:
    depends_on:
      - mongodb
      - kafka
    build: ../user_service
    env_file:
      - "./.env"
    ports:
      - "${USER_SERVICE_EXTERNAL_PORT}:${PORT}"

  post_service:
    depends_on:
      - mongodb
      - kafka
    build: ../post_service
    env_file:
      - "./.env"
    ports:
      - "${POST_SERVICE_EXTERNAL_PORT}:${PORT}"

  notifier_service:
    depends_on:
      - mongodb
      - redis_cache
      - kafka
    build: ../notifier_service
    env_file:
      - "./.env"
    ports:
      - "${NOTIFIER_SERVICE_EXTERNAL_PORT}:${PORT}"

volumes:
  db:
    driver: local
